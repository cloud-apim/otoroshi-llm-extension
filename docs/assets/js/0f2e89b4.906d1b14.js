"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[833],{1427:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=n(4848),s=n(8453);n(9229);const t={sidebar_position:5},a="Resilience",o={id:"resilience",title:"Resilience",description:"Provider fallback",source:"@site/docs/resilience.mdx",sourceDirName:".",slug:"/resilience",permalink:"/otoroshi-llm-extension/docs/resilience",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Egress Proxy Pattern",permalink:"/otoroshi-llm-extension/docs/egress-proxy-pattern"},next:{title:"Observability & Reporting",permalink:"/otoroshi-llm-extension/docs/observability-reporting"}},l={},c=[{value:"Provider fallback",id:"provider-fallback",level:2},{value:"Provider loadbalancing",id:"provider-loadbalancing",level:2}];function d(e){const i={h1:"h1",h2:"h2",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"resilience",children:"Resilience"}),"\n",(0,r.jsx)(i.h2,{id:"provider-fallback",children:"Provider fallback"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"fallback",src:n(5779).A+"",width:"566",height:"808"})}),"\n",(0,r.jsx)(i.h2,{id:"provider-loadbalancing",children:"Provider loadbalancing"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"lb",src:n(5931).A+"",width:"482",height:"636"})}),"\n",(0,r.jsx)(i.p,{children:"Resilience ensures that LLM interactions remain highly available and fault-tolerant, even when providers experience outages or failures."}),"\n",(0,r.jsx)(i.p,{children:"Key Features"}),"\n",(0,r.jsx)(i.p,{children:"Load Balancing: Distribute requests across multiple providers to optimize performance."}),"\n",(0,r.jsx)(i.p,{children:"Fallback Mechanism: Automatically switch to alternative LLMs in case of failures."}),"\n",(0,r.jsx)(i.p,{children:"Automatic Retries: Retry failed requests based on configurable rules to maximize successful responses."}),"\n",(0,r.jsx)(i.p,{children:"Rate Limiting & Quotas: Prevent overloading a single provider by distributing usage effectively."}),"\n",(0,r.jsx)(i.p,{children:"How It Works"}),"\n",(0,r.jsx)(i.p,{children:"Requests are first sent to a primary LLM provider."}),"\n",(0,r.jsx)(i.p,{children:"If the request fails, the system retries or falls back to a secondary provider."}),"\n",(0,r.jsx)(i.p,{children:"Load balancing ensures even distribution, reducing provider overload."}),"\n",(0,r.jsx)(i.p,{children:"The semantic cache minimizes redundant API calls by reusing past responses."})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},9229:(e,i,n)=>{n(6540),n(4848)},5779:(e,i,n)=>{n.d(i,{A:()=>r});const r=n.p+"assets/images/fallback-5b30a2ba678382d16461483c3f096d04.png"},5931:(e,i,n)=>{n.d(i,{A:()=>r});const r=n.p+"assets/images/lb-9135b84dcaf2b42823d1a78ca4568ace.png"},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>o});var r=n(6540);const s={},t=r.createContext(s);function a(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);
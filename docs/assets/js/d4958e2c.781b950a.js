"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8977],{8080:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var o=t(4848),i=t(8453);t(9229);const l={sidebar_position:1},a="Wasm Functions",r={id:"function-calling/function-wasm-calling",title:"Wasm Functions",description:"\ud83e\udd16 What Are Tool Calls in LLMs?",source:"@site/docs/function-calling/function-wasm-calling.mdx",sourceDirName:"function-calling",slug:"/function-calling/function-wasm-calling",permalink:"/otoroshi-llm-extension/docs/function-calling/function-wasm-calling",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/otoroshi-llm-extension/docs/function-calling/overview"},next:{title:"Http Functions",permalink:"/otoroshi-llm-extension/docs/function-calling/http-functions"}},s={},c=[{value:"\ud83e\udd16 What Are Tool Calls in LLMs?",id:"-what-are-tool-calls-in-llms",level:2},{value:"\ud83d\udd39 How Do Tool Calls Work?",id:"-how-do-tool-calls-work",level:3},{value:"\u2708\ufe0f What is <code>get_flight_times</code>?",id:"\ufe0f-what-is-get_flight_times",level:2},{value:"\ud83d\udee0\ufe0f How Does it Work?",id:"\ufe0f-how-does-it-work",level:2},{value:"\ud83d\udcdd Example Usage",id:"-example-usage",level:2},{value:"Next flight function example",id:"next-flight-function-example",level:2},{value:"Function configuration",id:"function-configuration",level:3},{value:"Request to our endpoint",id:"request-to-our-endpoint",level:3},{value:"Full entity configuration",id:"full-entity-configuration",level:3},{value:"Provider configuration",id:"provider-configuration",level:3},{value:"Endpoint configuration",id:"endpoint-configuration",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"wasm-functions",children:"Wasm Functions"}),"\n",(0,o.jsx)(e.h2,{id:"-what-are-tool-calls-in-llms",children:"\ud83e\udd16 What Are Tool Calls in LLMs?"}),"\n",(0,o.jsx)(e.p,{children:"Tool calls in Large Language Models (LLMs) allow the model to interact with external tools, APIs, or functions to fetch real-world data or perform tasks beyond its native capabilities."}),"\n",(0,o.jsxs)(e.p,{children:["Instead of relying solely on pre-trained knowledge, LLMs can dynamically query functions like ",(0,o.jsx)(e.code,{children:"get_flight_times"})," to provide accurate, real-time information."]}),"\n",(0,o.jsx)(e.h3,{id:"-how-do-tool-calls-work",children:"\ud83d\udd39 How Do Tool Calls Work?"}),"\n",(0,o.jsx)(e.p,{children:"When an LLM identifies a request that matches a tool\u2019s function, it formats the request into a structured call (like an API request) and processes the response before delivering it to the user."}),"\n",(0,o.jsxs)(e.h2,{id:"\ufe0f-what-is-get_flight_times",children:["\u2708\ufe0f What is ",(0,o.jsx)(e.code,{children:"get_flight_times"}),"?"]}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"get_flight_times"})," function is a tool call that helps you retrieve flight durations between two locations. By providing a departure and arrival destination, you can get accurate estimates of how long your flight will take."]}),"\n",(0,o.jsx)(e.h2,{id:"\ufe0f-how-does-it-work",children:"\ud83d\udee0\ufe0f How Does it Work?"}),"\n",(0,o.jsx)(e.p,{children:"The function operates by taking in two key parameters:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"departure"})," \ud83d\udeeb \u2013 The airport or city where your flight begins."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"arrival"})," \ud83d\udeec \u2013 The airport or city where your flight ends."]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["Once you provide these details, ",(0,o.jsx)(e.code,{children:"get_flight_times"})," fetches the estimated duration of direct and indirect flights between the specified locations. The function considers factors like average flight speeds, distances between airports, and typical air traffic conditions."]}),"\n",(0,o.jsx)(e.h2,{id:"-example-usage",children:"\ud83d\udcdd Example Usage"}),"\n",(0,o.jsxs)(e.p,{children:["Imagine you want to check the flight duration from ",(0,o.jsx)(e.strong,{children:"New York (JFK)"})," to ",(0,o.jsx)(e.strong,{children:"Los Angeles (LAX)"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'get_flight_times(departure="JFK", arrival="LAX")\n'})}),"\n",(0,o.jsxs)(e.p,{children:["The function will return the estimated flight duration, such as ",(0,o.jsx)(e.code,{children:"5h 30m"})," for a direct flight or longer if layovers are involved."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:t(8163).A+"",width:"974",height:"347"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:t(1304).A+"",width:"1024",height:"316"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:t(5169).A+"",width:"720",height:"427"})}),"\n",(0,o.jsx)(e.h2,{id:"next-flight-function-example",children:"Next flight function example"}),"\n",(0,o.jsxs)(e.p,{children:["In this example, we will create a tool call function named ",(0,o.jsx)(e.code,{children:"next_flight"})," that will take two IATA codes (airport codes like CDG for Paris Charles-De-Gaulle) and will return the flight number and when the flight will take off from now."]}),"\n",(0,o.jsx)(e.h3,{id:"function-configuration",children:"Function configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'\'inline module\';\n\nexports.tool_call = function(args) {\n  const formattedArguments = JSON.parse(args);\n  return JSON.stringify({\n    nextflight: `flight ${parseInt(Math.random() * 10000)} from ${formattedArguments["departure"]} to ${formattedArguments["arrival"]} is taking off in ${parseInt(Math.random() * 10)} hours`\n  })\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:"Function parameters"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'{\n  "departure": {\n    "type": "string",\n    "description": "The departure airport (IATA airport Code)"\n  },\n  "arrival": {\n    "type": "string",\n    "description": "The arrival airport (IATA airport Code)"\n  }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"request-to-our-endpoint",children:"Request to our endpoint"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",children:'curl --request POST \\\n  --url http://wasm-tool-function.oto.tools:8080/ \\\n  --header \'content-type: application/json\' \\\n  --data \'{\n  "messages": [\n    {\n       "role": "user",\n       "content": "Could you give me the next flight from CDG to DXB please ?"\n    }\n  ]\n}\'\n'})}),"\n",(0,o.jsxs)(e.p,{children:["LLM Response with our tool function ",(0,o.jsx)(e.code,{children:"next_flight"})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'{\n  "id": "chatcmpl-FzOsLwlxF7cgTkpBfSPfhYEEvw53X274",\n  "object": "chat.completion",\n  "created": 1743519776,\n  "model": "gpt-4o-mini",\n  "system_fingerprint": "fp-Jz72gmHTIAQw2xYamDRy3Q8kMSPUsMb0",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The next flight from CDG (Charles de Gaulle Airport) to DXB (Dubai International Airport) is flight 3755, which is taking off in 9 hours."\n      },\n      "logprobs": null,\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 209,\n    "completion_tokens": 37,\n    "total_tokens": 246,\n    "completion_tokens_details": {\n      "reasoning_tokens": 0\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"full-entity-configuration",children:"Full entity configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'{\n  "_loc": {\n    "tenant": "default",\n    "teams": [\n      "default"\n    ]\n  },\n  "id": "tool-function_f6562221-1c0f-4f8e-aae6-279beb0144dd",\n  "name": "next_flight",\n  "description": "This function returns the next flight.",\n  "metadata": {},\n  "tags": [],\n  "strict": true,\n  "parameters": {\n    "departure": {\n      "type": "string",\n      "description": "The departure airport (IATA airport Code)"\n    },\n    "arrival": {\n      "type": "string",\n      "description": "The arrival airport (IATA airport Code)"\n    }\n  },\n  "required": null,\n  "backend": {\n    "kind": "QuickJs",\n    "options": {\n      "jsPath": "\'inline module\';\\n\\nexports.tool_call = function(args) {\\n  const formattedArguments = JSON.parse(args);\\n  return JSON.stringify({\\n    nextflight: `flight ${parseInt(Math.random() * 10000)} from ${formattedArguments[\\"departure\\"]} to ${formattedArguments[\\"arrival\\"]} is taking off in ${parseInt(Math.random() * 10)} hours`\\n  })\\n}"\n    }\n  },\n  "kind": "ai-gateway.extensions.cloud-apim.com/ToolFunction"\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"provider-configuration",children:"Provider configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'{\n  "_loc": {\n    "tenant": "default",\n    "teams": [\n      "default"\n    ]\n  },\n  "id": "provider_6699f127-34d1-4fef-b3ad-6bcf592ed9c6",\n  "name": "OpenAI provider + tool wasm function",\n  "description": "An OpenAI LLM api provider",\n  "metadata": {},\n  "tags": [],\n  "provider": "openai",\n  "connection": {\n    "base_url": "https://api.openai.com/v1",\n    "token": "${vault://local/openai-token}",\n    "timeout": 30000\n  },\n  "options": {\n    "model": "gpt-4o-mini",\n    "frequency_penalty": null,\n    "logit_bias": null,\n    "logprobs": null,\n    "top_logprobs": null,\n    "max_tokens": null,\n    "n": 1,\n    "presence_penalty": null,\n    "response_format": null,\n    "seed": null,\n    "stop": null,\n    "stream": false,\n    "temperature": 1,\n    "top_p": 1,\n    "tools": null,\n    "tool_choice": null,\n    "user": null,\n    "wasm_tools": [\n      "tool-function_f6562221-1c0f-4f8e-aae6-279beb0144dd"\n    ],\n    "mcp_connectors": [],\n    "allow_config_override": true\n  },\n  "provider_fallback": null,\n  "context": {\n    "default": null,\n    "contexts": []\n  },\n  "models": {\n    "include": [],\n    "exclude": []\n  },\n  "guardrails": [],\n  "guardrails_fail_on_deny": false,\n  "cache": {\n    "strategy": "none",\n    "ttl": 300000,\n    "score": 0.8\n  },\n  "kind": "ai-gateway.extensions.cloud-apim.com/Provider"\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"endpoint-configuration",children:"Endpoint configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'{\n  "_loc": {\n    "tenant": "default",\n    "teams": [\n      "default"\n    ]\n  },\n  "id": "route_52b9e4b69-d161-4e26-9a32-4bcc4c25e2db",\n  "name": "wasm tool function example",\n  "description": "wasm tool function example",\n  "tags": [],\n  "metadata": {},\n  "enabled": true,\n  "debug_flow": false,\n  "export_reporting": false,\n  "capture": false,\n  "groups": [\n    "default"\n  ],\n  "bound_listeners": [],\n  "frontend": {\n    "domains": [\n      "wasm-tool-function.oto.tools"\n    ],\n    "strip_path": true,\n    "exact": false,\n    "headers": {},\n    "query": {},\n    "methods": []\n  },\n  "backend": {\n    "targets": [\n      {\n        "id": "target_1",\n        "hostname": "request.otoroshi.io",\n        "port": 443,\n        "tls": true,\n        "weight": 1,\n        "predicate": {\n          "type": "AlwaysMatch"\n        },\n        "protocol": "HTTP/1.1",\n        "ip_address": null,\n        "tls_config": {\n          "certs": [],\n          "trusted_certs": [],\n          "enabled": false,\n          "loose": false,\n          "trust_all": false\n        }\n      }\n    ],\n    "root": "/",\n    "rewrite": false,\n    "load_balancing": {\n      "type": "RoundRobin"\n    },\n    "client": {\n      "retries": 1,\n      "max_errors": 20,\n      "retry_initial_delay": 50,\n      "backoff_factor": 2,\n      "call_timeout": 30000,\n      "call_and_stream_timeout": 120000,\n      "connection_timeout": 10000,\n      "idle_timeout": 60000,\n      "global_timeout": 30000,\n      "sample_interval": 2000,\n      "proxy": {},\n      "custom_timeouts": [],\n      "cache_connection_settings": {\n        "enabled": false,\n        "queue_size": 2048\n      }\n    },\n    "health_check": {\n      "enabled": false,\n      "url": "",\n      "timeout": 5000,\n      "healthyStatuses": [],\n      "unhealthyStatuses": []\n    }\n  },\n  "backend_ref": null,\n  "plugins": [\n    {\n      "enabled": true,\n      "debug": false,\n      "plugin": "cp:otoroshi.next.plugins.OverrideHost",\n      "include": [],\n      "exclude": [],\n      "config": {},\n      "bound_listeners": [],\n      "plugin_index": {\n        "transform_request": 0\n      }\n    },\n    {\n      "enabled": true,\n      "debug": false,\n      "plugin": "cp:otoroshi_plugins.com.cloud.apim.otoroshi.extensions.aigateway.plugins.OpenAiCompatProxy",\n      "include": [],\n      "exclude": [],\n      "config": {\n        "refs": [\n          "provider_6699f127-34d1-4fef-b3ad-6bcf592ed9c6"\n        ]\n      },\n      "bound_listeners": [],\n      "plugin_index": {}\n    }\n  ],\n  "kind": "proxy.otoroshi.io/Route"\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},9229:(n,e,t)=>{t(6540),t(4848)},8163:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/tool-calls-1-adc5eae3b7f9967b2dfb3e704088f3b0.png"},1304:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/tool-calls-2-a54507f5a6dde25f4862ffd9129e65c4.png"},5169:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/tool-calls-3-d2ad517b3a67baebc1f8350d653e357b.png"},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var o=t(6540);const i={},l=o.createContext(i);function a(n){const e=o.useContext(l);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(l.Provider,{value:e},n.children)}}}]);